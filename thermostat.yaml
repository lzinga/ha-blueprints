blueprint:
  name: HVAC Auto On/Off with Energy Savings & Presence
  description: "Automated HVAC control with delays, presence, notifications, and no extra helpers"
  domain: automation

input:
  climate_entity:
    name: Climate Entity
    description: "Select your HVAC climate entity"
    selector:
      entity:
        domain: climate
  start_time:
    name: Start Time
    description: "Time to turn on HVAC (24h format, e.g. 08:00:00)"
    selector:
      time:
  end_time:
    name: End Time
    description: "Time to turn off HVAC (24h format, e.g. 22:00:00)"
    selector:
      time:
  hvac_mode_on:
    name: HVAC Mode (On)
    description: "HVAC mode to set when turning on (e.g. heat, cool, auto)"
    default: auto
    selector:
      select:
        options:
          - heat
          - cool
          - auto
          - dry
          - fan_only
  hvac_mode_off:
    name: HVAC Mode (Off)
    description: "HVAC mode to set when turning off (e.g. off, auto)"
    default: off
    selector:
      select:
        options:
          - off
          - auto
  target_temp_f:
    name: Target Temperature (°F)
    description: "Set the temperature in Fahrenheit"
    default: 72
    selector:
      number:
        min: 60
        max: 90
        step: 1
        unit_of_measurement: °F
  notify_service:
    name: Notification Service
    description: "Optional: Select a notification service (e.g. notify.mobile_app_phone)"
    required: false
    selector:
      entity:
        domain: notify
  notify_message_on:
    name: Notification Message (On)
    description: "Optional: Message to send when HVAC turns on"
    default: "HVAC is now on."
    required: false
    selector:
      text:
  notify_message_off:
    name: Notification Message (Off)
    description: "Optional: Message to send when HVAC turns off"
    default: "HVAC is now off."
    required: false
    selector:
      text:
  enable_presence_detection:
    name: Enable Presence Detection
    description: "Check this to only run automation when someone is home"
    default: false
    selector:
      boolean:
  presence_entity:
    name: Presence Entity
    description: "Select your presence entity (e.g. device_tracker.your_phone, group.all_devices, person.your_name)"
    required: false
    selector:
      entity:
  enable_delay:
    name: Enable Energy-Saving Delay
    description: "Add delay to prevent rapid HVAC cycling"
    default: false
    selector:
      boolean:
  delay_minutes:
    name: Delay Duration (Minutes)
    description: "Wait time before executing HVAC changes"
    default: 5
    selector:
      number:
        min: 1
        max: 30
        step: 1

trigger:
  - platform: time
    at: !input start_time
  - platform: time
    at: !input end_time

condition: []

action:
  - choose:
      - conditions:
          - condition: template
            value_template: "{{ trigger.platform == 'time' and trigger.at == states[input.start_time].state }}"
        sequence:
          - if:
              - condition: template
                value_template: >
                  {% if input.enable_presence_detection %}
                    {{ is_state(input.presence_entity, 'home') if input.presence_entity is defined else false }}
                  {% else %}
                    true
                  {% endif %}
            then:
              - if:
                  - condition: template
                    value_template: "{{ input.enable_delay }}"
                then:
                  - delay: !input delay_minutes
              - service: climate.set_hvac_mode
                target:
                  entity_id: !input climate_entity
                data:
                  hvac_mode: !input hvac_mode_on
              - service: climate.set_temperature
                target:
                  entity_id: !input climate_entity
                data:
                  temperature: !input target_temp_f
              - if:
                  - condition: template
                    value_template: "{{ input.notify_service != '' }}"
                then:
                  - service: !input notify_service
                    data:
                      message: !input notify_message_on
      - conditions:
          - condition: template
            value_template: "{{ trigger.platform == 'time' and trigger.at == states[input.end_time].state }}"
        sequence:
          - if:
              - condition: template
                value_template: >
                  {% if input.enable_presence_detection %}
                    {{ is_state(input.presence_entity, 'home') if input.presence_entity is defined else false }}
                  {% else %}
                    true
                  {% endif %}
            then:
              - if:
                  - condition: template
                    value_template: "{{ input.enable_delay }}"
                then:
                  - delay: !input delay_minutes
              - service: climate.set_hvac_mode
                target:
                  entity_id: !input climate_entity
                data:
                  hvac_mode: !input hvac_mode_off
              - if:
                  - condition: template
                    value_template: "{{ input.notify_service != '' }}"
                then:
                  - service: !input notify_service
                    data:
                      message: !input notify_message_off
    default: []
